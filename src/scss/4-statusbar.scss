/* ---------------------------------- Order --------------------------------- */
// Left items
[id='vscodevim.vim.primary'] {
  order: 1;
}
[id='alefragnani.project-manager.projectManager.statusBar'] {
  order: 2;
}
[id='status.scm.0'] {
  order: 3;
}
[id='status.scm.1'] {
  order: 4;
}
[id='status.problems'] {
  order: 5;
}

// Right items
[id='status.notifications'] {
  order: 2;
}

[id='angelo-breuer.clock']:not(#\9):not(#\9):not(#\9) {
  padding-left: 5px;
  order: 1;
  margin-right: $screen-edge-gutter;
  .statusbar-item-label {
    padding: 0;
    color: $date-time-foreground;
    background-color: $vim-status-mode-background;
  }
}

[id='GitHub.copilot.status'] {
  order: 3;
}

[id='vscodevim.vim.showcmd'] {
  order: 4;
}
/* --------------------------------- Spacing -------------------------------- */
[id='#{$statusbar-id}'] {
  background-color: $status-bar-background;
  > .left-items.items-container > div,
  > .right-items.items-container > div {
    // > .left-items.items-container > div > .statusbar-item-label,
    // > .right-items.items-container > div > .statusbar-item-label {
    height: $status-bar-item-height;
    margin: 3px 0 0;
    padding: 0;
  }
  > .left-items.items-container > div > .statusbar-item-label,
  > .right-items.items-container > div > .statusbar-item-label {
    margin: 0;
    padding: 0px 5px;
    border-radius: $border-radius-md;
  }

  > .left-items.items-container {
    > [id='vscodevim.vim.primary'] {
      margin-left: $screen-edge-gutter;
    }
    gap: $status-bar-item-gap;
  }

  > .right-items.items-container {
    gap: $status-bar-item-gap;
  }

  // > .right-items.items-container {
  //   > [id='vscodevim.vim.showcmd']:not(
  //       :has(> .statusbar-item-label[style*='display: none'])
  //     ) {
  //     margin-right: $screen-edge-gutter;
  //   }
  //   gap: $status-bar-item-gap;
  // }

  // [id='status.notifications']:has(
  //     ~ [id='vscodevim.vim.showcmd']
  //       > .statusbar-item-label[style*='display: none']
  //   ) {
  //   margin-right: calc(0px - $status-bar-item-gap);
  // }
}

/* -------------------------------- VIM items ------------------------------- */
div[id='vscodevim.vim.primary'],
div[id='vscodevim.vim.showcmd'] {
  &.error-kind {
    background-color: initial;
    > .statusbar-item-label:not(#\9):not(#\9):not(#\9) {
      color: $error-foreground;
      background-color: $error-background;
      outline: 2px solid $error-foreground;
    }
  }

  display: flex;
  align-items: center;

  > .statusbar-item-label:not(#\9) {
    margin: 0;
    padding: 0;
    min-width: 0;
    border-radius: $border-radius-md;

    &[style*='display: none'] {
      opacity: 0;
      display: block;
    }

    &:not([style*='display: none']):not(#\9):not(#\9),
    &[aria-label*='|']:not(#\9):not(#\9),
    &[aria-label*='Pattern not found']:not(#\9):not(#\9) {
      // margin-bottom: 2px;
      height: $vim-input-height;
      box-sizing: border-box;
    }
  }
}

.left-items.items-container:has(
    > div[id='vscodevim.vim.primary']
      > .statusbar-item-label[style*='display: none']
  ) {
  transform: translateX(0 - ($status-bar-item-gap + $screen-edge-gutter));
}

div[id='vscodevim.vim.primary'] {
  > .statusbar-item-label {
    transition: min-width $general-trans-duration-long;
    color: $vim-status-foreground;
    position: relative;

    &[aria-label*='|']:not(#\9):not(#\9),
    &[aria-label*='Pattern not found']:not(#\9):not(#\9) {
      min-width: $vim-status-input-width;
      outline: 2px solid $vim-status-foreground;
      padding: 2px 3px 2px;
    }

    &:not([aria-label*='|']):not([aria-label*='Pattern not found']):not(
        [style*='display: none']
      ):not(#\9):not(#\9) {
      width: $vim-status-mode-width;
      &::before {
        position: absolute;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        background-color: $vim-status-mode-background;
        text-align: center;
      }
    }

    &[aria-label*='-- INSERT --']:not(#\9):not(#\9) {
      &::before {
        content: 'INSERT';
      }
    }
    &[aria-label*='-- NORMAL --']:not(#\9):not(#\9) {
      &::before {
        content: 'NORMAL';
      }
    }

    &[aria-label*='-- VISUAL --']:not(#\9):not(#\9) {
      &::before {
        content: 'VISUAL';
      }
    }

    &[aria-label*='-- VISUAL LINE --']:not(#\9):not(#\9) {
      &::before {
        content: 'VISUAL LINE';
      }
    }

    &[aria-label*='-- VISUAL BLOCK --']:not(#\9):not(#\9) {
      &::before {
        content: 'VISUAL BLOCK';
      }
    }
  }
}

div[id='vscodevim.vim.showcmd'] {
  > .statusbar-item-label {
    color: $vim-pending-keys-foreground;
    justify-content: center;
    transition: min-width $general-trans-duration-medium,
      opacity $general-trans-duration-medium;

    &:not([style*='display: none']):not(#\9):not(#\9) {
      opacity: 1;
      min-width: $vim-pending-keys-input-width;
      outline: 2px solid $vim-pending-keys-foreground;
      padding: 2px 2px 5px;
    }
  }
}
